{"version":3,"sources":["firebase.js","contexts/authContext.js","Components/widgets/header.jsx","Components/feed.jsx","Components/detailView.jsx","Components/searchView.jsx","Components/auth.jsx","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","appTitle","useEffect","auth","onAuthStateChanged","Provider","value","Header","props","searchValue","setSearchValue","useContext","myHis","useHistory","className","to","style","marginLeft","onClick","fire","signOut","action","onSubmit","e","preventDefault","text1","trim","replace","push","class","type","name","onChange","target","placeholder","aria-label","href","disabled","aria-hidden","Feed","data","setData","showingGifs","setShowingGifs","fetch","then","res","json","response","slug","dat","listItems","map","item","key","id","src","images","fixed_height","url","gifurl","alt","gifsShowing","console","log","Detail","match","params","giflink","setGifLink","Search","useParams","resultList","setResultList","resultCards","marginBottom","marginTop","color","Signup","history","handleSignUp","useCallback","event","a","async","elements","email","password","createUserWithEmailAndPassword","alert","Login","handleLogin","signInWithEmailAndPassword","App","basename","window","location","pathname","exact","path","component","DetailView","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86a9bba9.chunk.js","sourcesContent":["/*\r\n * firebase.js - file jus basically config our firebase app for our project\r\n *\r\n *\r\n *\r\n */\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\r\n});\r\n\r\nexport default app;\r\n","import React, { useEffect, useState } from 'react';\r\nimport app from '../firebase';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [appTitle, setAppTitle] = useState('ImageGal');\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged(setCurrentUser);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n        appTitle\r\n      }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/authContext';\r\nimport fire from '../../firebase';\r\nimport '../../css/shared/header.css';\r\n\r\nconst Header = props => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const { currentUser, appTitle } = useContext(AuthContext);\r\n  let myHis = useHistory();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const text1 = searchValue.trim().replace(/ /g, '+');\r\n    myHis.push('/search/' + text1);\r\n    setSearchValue('');\r\n  };\r\n\r\n  return (\r\n    <header className='header-main-site'>\r\n      <div className='top-navbar'>\r\n        <Link to='/' className='header-main-site_brand'>\r\n          <h1 style={{ marginLeft: '5px' }}> Gif-Search </h1>\r\n        </Link>\r\n        <nav className='header-main-site_nav'>\r\n          {currentUser ? (\r\n            <ul className='auth'>\r\n              <li>\r\n                <Link\r\n                  to='#'\r\n                  className='login'\r\n                  onClick={() => fire.auth().signOut()}>\r\n                  Sign out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul className='auth'>\r\n              <li>\r\n                <Link to='/login' className='login'>\r\n                  Log In\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/signup' className='signup'>\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </div>\r\n      <div className='header-main-site_wrap'>\r\n        <Link to='/' className='header-main-site_brand'>\r\n          <h1> Gif-Search</h1>\r\n        </Link>\r\n        <div className='header-main-site_search'>\r\n          <form action='' className='search-form' onSubmit={handleSubmit}>\r\n            <input\r\n              class='search-bar-form-control'\r\n              type='text'\r\n              name='search'\r\n              onChange={e => setSearchValue(e.target.value)}\r\n              value={searchValue}\r\n              placeholder='Search'\r\n              aria-label='Search'\r\n            />\r\n            <button\r\n              href='#'\r\n              class='search-form-btn'\r\n              type='submit'\r\n              disabled={!searchValue}>\r\n              <i class='fas fa-search search-icon' aria-hidden='true'></i>\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <nav className='header-main-site_nav'>\r\n          {currentUser ? (\r\n            <ul className='auth'>\r\n              <li>\r\n                <Link\r\n                  to='#'\r\n                  className='login'\r\n                  onClick={() => fire.auth().signOut()}>\r\n                  Sign out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          ) : (\r\n            <ul className='auth'>\r\n              <li>\r\n                <Link to='/login' className='login'>\r\n                  Log In\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/signup' className='signup'>\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport '../css/shared/feed.css';\r\n\r\nconst Feed = props => {\r\n  const [data, setData] = useState([]);\r\n  const [showingGifs, setShowingGifs] = useState([]);\r\n\r\n  // we fetch the 5 top trending gif and load similar gifs\r\n  // using https\r\n  useEffect(() => {\r\n    fetch(\r\n      'https://api.giphy.com/v1/gifs/trending?api_key=pOIRajs5VujoMyGvrMyB7uNXcFtFyt6n&limit=5'\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        setData(response.data);\r\n        return response.data[0].slug;\r\n      })\r\n      .then(dat => {\r\n        fetch(\r\n          `https://api.giphy.com/v1/gifs/search?q=${dat}&api_key=pOIRajs5VujoMyGvrMyB7uNXcFtFyt6n`\r\n        )\r\n          .then(res => res.json())\r\n          .then(response => setShowingGifs(response.data));\r\n      });\r\n  }, []);\r\n\r\n  // the 5 trending gifs\r\n  const listItems = data.map(item => (\r\n    <div key={item.id} className='gif-card'>\r\n      <img\r\n        src={item.images.fixed_height.url}\r\n        onClick={() => getAllGifs(item.slug)}\r\n        alt='pic'\r\n        className='gif-card-img'\r\n      />\r\n    </div>\r\n  ));\r\n  // related gifs from the 5 top trending gifs\r\n  const gifsShowing = showingGifs.map(item => (\r\n    <div\r\n      key={item.id}\r\n      className='gif-card'\r\n      onClick={() => console.log(item.id)}>\r\n      <Link to={`/detail/${item.id}`}>\r\n        <img\r\n          src={item.images.fixed_height.url}\r\n          alt='pic'\r\n          className='gif-card-img'\r\n        />\r\n      </Link>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <main className='main-feed-content'>\r\n      <section className='select-picker-sec'>\r\n        <header className='select-picker-sec_header'>\r\n          <h1>Trending GIFs</h1>\r\n          <div className='trend-gif-wrap'>{listItems}</div>\r\n        </header>\r\n      </section>\r\n      <section className='meme-sec'>\r\n        <h1>Search GIFs</h1>\r\n        <article className='main-gifs-cards'>{gifsShowing}</article>\r\n      </section>\r\n    </main>\r\n  );\r\n\r\n  // this function is run when we lick one of the 5 trending gifs, then it load the rest of the related gifs\r\n  function getAllGifs(gifurl) {\r\n    fetch(\r\n      `https://api.giphy.com/v1/gifs/search?q=${gifurl}&api_key=pOIRajs5VujoMyGvrMyB7uNXcFtFyt6n`\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => setShowingGifs(response.data));\r\n  }\r\n};\r\nexport default Feed;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../css/shared/feed.css';\r\nimport '../css/shared/detail.css';\r\n\r\nconst Detail = props => {\r\n  const { id } = props.match.params;\r\n  const [giflink, setGifLink] = useState('');\r\n  // over https\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.giphy.com/v1/gifs?ids=${id}&api_key=pOIRajs5VujoMyGvrMyB7uNXcFtFyt6n`\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        console.log(response.data[0].images);\r\n\r\n        setGifLink(response.data[0].images['downsized'].url);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className='main-feed-content'>\r\n      <div className='detail-wrap'>\r\n        <img src={giflink} alt='pic' className='detail-card-img' />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport '../css/shared/feed.css';\r\n\r\nconst Search = props => {\r\n  let { id } = useParams();\r\n  const [resultList, setResultList] = useState([]);\r\n  const styleh1 = {\r\n    marginBottom: '2em',\r\n    marginTop: '1em',\r\n    color: 'white'\r\n  };\r\n\r\n  useEffect(() => {\r\n    // over https\r\n    fetch(\r\n      'https://api.giphy.com/v1/gifs/search?q=' +\r\n        id +\r\n        '&api_key=pOIRajs5VujoMyGvrMyB7uNXcFtFyt6n&limit=30'\r\n    )\r\n      .then(res => res.json())\r\n      .then(response => response.data)\r\n      .then(data => {\r\n        setResultList(data);\r\n        console.log(data);\r\n      });\r\n  }, [id]);\r\n\r\n  const resultCards = resultList.map(item => (\r\n    <div\r\n      key={item.id}\r\n      className='gif-card'\r\n      onClick={() => console.log(item.id)}>\r\n      <Link to={`/detail/${item.id}`}>\r\n        <img\r\n          src={item.images.fixed_height.url}\r\n          alt='pic'\r\n          className='gif-card-img'\r\n        />\r\n      </Link>\r\n    </div>\r\n  ));\r\n  return (\r\n    <main className='main-feed-content'>\r\n      <h1 style={styleh1}> Results </h1>\r\n      <article className='main-gifs-cards'>{resultCards}</article>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useCallback, useContext } from 'react';\r\nimport { withRouter, Redirect } from 'react-router';\r\nimport fire from '../firebase';\r\nimport { AuthContext } from '../contexts/authContext';\r\nimport '../css/shared/feed.css';\r\nimport '../css/shared/auth.css';\r\n\r\nconst Signup = ({ history }) => {\r\n  const handleSignUp = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await fire\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email.value, password.value);\r\n        history.push('/');\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <main className='main-feed-content site-auth-content'>\r\n      <div className='auth-wrap'>\r\n        <h1 className='auth-h1'> Sign Up </h1>\r\n        <form className='auth-wrap_form' onSubmit={handleSignUp}>\r\n          <input\r\n            type='email'\r\n            className='auth-form_inpt'\r\n            name='email'\r\n            placeholder='E-mail'\r\n          />\r\n          <input\r\n            type='password'\r\n            className='auth-form_inpt'\r\n            name='password'\r\n            placeholder='Password'\r\n          />\r\n          <input\r\n            type='submit'\r\n            className='auth-submit_btn'\r\n            value='Sign Up'\r\n            // onClick={e => e.preventDefault() && false}\r\n          />\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst Login = ({ history }) => {\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target.elements;\r\n      try {\r\n        await fire\r\n          .auth()\r\n          .signInWithEmailAndPassword(email.value, password.value);\r\n        history.push('/');\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <main className='main-feed-content site-auth-content'>\r\n      <div className='auth-wrap'>\r\n        <h1 className='auth-h1'> Log In </h1>\r\n        <form className='auth-wrap_form' onSubmit={handleLogin}>\r\n          <input\r\n            type='email'\r\n            className='auth-form_inpt'\r\n            name='email'\r\n            placeholder='E-mail'\r\n          />\r\n          <input\r\n            type='text'\r\n            className='auth-form_inpt'\r\n            name='password'\r\n            placeholder='Password'\r\n          />\r\n          <input\r\n            type='submit'\r\n            className='auth-submit_btn'\r\n            value='Log In'\r\n            // onClick={e => e.preventDefault() && false}\r\n          />\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport { Signup, Login };\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { AuthProvider } from './contexts/authContext';\nimport Header from './Components/widgets/header';\nimport Feed from './Components/feed';\nimport DetailView from './Components/detailView';\nimport Search from './Components/searchView';\nimport { Signup, Login } from './Components/auth';\n// import Footer from './Components/widgets/footer';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router basename={window.location.pathname || '/'}>\n        <div className='App'>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Feed} />\n            <Route exact path='/detail/:id' component={DetailView} />\n            <Route exact path='/search/:id' component={Search} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n          </Switch>\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}